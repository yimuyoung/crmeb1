<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: vod/business/vod_cdn.proto

namespace Volc\Service\Vod\Models\Business;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Volcengine.Vod.Models.Business.VodBandwidthData</code>
 */
class VodBandwidthData extends \Google\Protobuf\Internal\Message
{
    /**
     * 每个时间粒度的时间
     *
     * Generated from protobuf field <code>string Time = 1;</code>
     */
    protected $Time = '';
    /**
     * 带宽，单位为 Mbps
     *
     * Generated from protobuf field <code>double Bandwidth = 2;</code>
     */
    protected $Bandwidth = 0.0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $Time
     *           每个时间粒度的时间
     *     @type float $Bandwidth
     *           带宽，单位为 Mbps
     * }
     */
    public function __construct($data = NULL) {
        \Volc\Service\Vod\Models\GPBMetadata\VodCdn::initOnce();
        parent::__construct($data);
    }

    /**
     * 每个时间粒度的时间
     *
     * Generated from protobuf field <code>string Time = 1;</code>
     * @return string
     */
    public function getTime()
    {
        return $this->Time;
    }

    /**
     * 每个时间粒度的时间
     *
     * Generated from protobuf field <code>string Time = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setTime($var)
    {
        GPBUtil::checkString($var, True);
        $this->Time = $var;

        return $this;
    }

    /**
     * 带宽，单位为 Mbps
     *
     * Generated from protobuf field <code>double Bandwidth = 2;</code>
     * @return float
     */
    public function getBandwidth()
    {
        return $this->Bandwidth;
    }

    /**
     * 带宽，单位为 Mbps
     *
     * Generated from protobuf field <code>double Bandwidth = 2;</code>
     * @param float $var
     * @return $this
     */
    public function setBandwidth($var)
    {
        GPBUtil::checkDouble($var);
        $this->Bandwidth = $var;

        return $this;
    }

}

