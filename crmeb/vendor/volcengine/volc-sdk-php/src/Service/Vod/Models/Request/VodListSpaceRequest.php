<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: vod/request/request_vod.proto

namespace Volc\Service\Vod\Models\Request;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Volcengine.Vod.Models.Request.VodListSpaceRequest</code>
 */
class VodListSpaceRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * 查询游标 
     *
     * Generated from protobuf field <code>double Offset = 1;</code>
     */
    protected $Offset = 0.0;
    /**
     * 查询数量 
     *
     * Generated from protobuf field <code>double Limit = 2;</code>
     */
    protected $Limit = 0.0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type float $Offset
     *           查询游标 
     *     @type float $Limit
     *           查询数量 
     * }
     */
    public function __construct($data = NULL) {
        \Volc\Service\Vod\Models\GPBMetadata\RequestVod::initOnce();
        parent::__construct($data);
    }

    /**
     * 查询游标 
     *
     * Generated from protobuf field <code>double Offset = 1;</code>
     * @return float
     */
    public function getOffset()
    {
        return $this->Offset;
    }

    /**
     * 查询游标 
     *
     * Generated from protobuf field <code>double Offset = 1;</code>
     * @param float $var
     * @return $this
     */
    public function setOffset($var)
    {
        GPBUtil::checkDouble($var);
        $this->Offset = $var;

        return $this;
    }

    /**
     * 查询数量 
     *
     * Generated from protobuf field <code>double Limit = 2;</code>
     * @return float
     */
    public function getLimit()
    {
        return $this->Limit;
    }

    /**
     * 查询数量 
     *
     * Generated from protobuf field <code>double Limit = 2;</code>
     * @param float $var
     * @return $this
     */
    public function setLimit($var)
    {
        GPBUtil::checkDouble($var);
        $this->Limit = $var;

        return $this;
    }

}

