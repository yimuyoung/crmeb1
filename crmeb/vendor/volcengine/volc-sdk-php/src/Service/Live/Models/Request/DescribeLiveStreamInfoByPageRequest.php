<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: live/request/request_live.proto

namespace Volc\Service\Live\Models\Request;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Volcengine.Live.Models.Request.DescribeLiveStreamInfoByPageRequest</code>
 */
class DescribeLiveStreamInfoByPageRequest extends \Google\Protobuf\Internal\Message
{
    /**
     *当前页码，取值范围为 。
     *
     * Generated from protobuf field <code>int64 PageNum = 1;</code>
     */
    protected $PageNum = 0;
    /**
     *分页大小，取值范围为 。
     *
     * Generated from protobuf field <code>int64 PageSize = 2;</code>
     */
    protected $PageSize = 0;
    /**
     *域名空间名称。
     *参数 `Domain` 和 `Vhost`传且仅传一个。
     *
     * Generated from protobuf field <code>string Vhost = 3;</code>
     */
    protected $Vhost = '';
    /**
     *推流域名。
     *参数 `Domain` 和 `Vhost`传且仅传一个。
     *
     * Generated from protobuf field <code>string Domain = 4;</code>
     */
    protected $Domain = '';
    /**
     * 应用名称，默认查询所有应用名称，由 1 到 30
     * 位数字、字母、下划线及"-"和"."组成。
     *
     * Generated from protobuf field <code>string App = 5;</code>
     */
    protected $App = '';
    /**
     * 流名称，缺省情况下，查询所有流名称，由 1 到 100
     * 位数字、字母、下划线及"-"和"."组成，如果指定 Stream，必须同时指定 App 的值
     *
     * Generated from protobuf field <code>string Stream = 6;</code>
     */
    protected $Stream = '';
    /**
     * 流类型，缺省情况下表示全选。支持如下取值。
     *<li>Origin：原始流；
     *<li>trans：转码流。
     *
     * Generated from protobuf field <code>string StreamType = 7;</code>
     */
    protected $StreamType = '';
    /**
     * 想要查询的目标信息，使用英文逗号作为分隔符“,”，例如，bitrate,framerate。缺省情况下表示
     *bitrate,framerate。支持如下取值。 <li>all：所有信息；
     *<li>onlineuser：在线人数；
     *<li>bandwidth：带宽信息;
     *<li>bitrate：码率信息；
     *<li>framerate：帧率信息；
     *
     * Generated from protobuf field <code>string InfoType = 8;</code>
     */
    protected $InfoType = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $PageNum
     *          当前页码，取值范围为 。
     *     @type int|string $PageSize
     *          分页大小，取值范围为 。
     *     @type string $Vhost
     *          域名空间名称。
     *          参数 `Domain` 和 `Vhost`传且仅传一个。
     *     @type string $Domain
     *          推流域名。
     *          参数 `Domain` 和 `Vhost`传且仅传一个。
     *     @type string $App
     *           应用名称，默认查询所有应用名称，由 1 到 30
     *           位数字、字母、下划线及"-"和"."组成。
     *     @type string $Stream
     *           流名称，缺省情况下，查询所有流名称，由 1 到 100
     *           位数字、字母、下划线及"-"和"."组成，如果指定 Stream，必须同时指定 App 的值
     *     @type string $StreamType
     *           流类型，缺省情况下表示全选。支持如下取值。
     *          <li>Origin：原始流；
     *          <li>trans：转码流。
     *     @type string $InfoType
     *           想要查询的目标信息，使用英文逗号作为分隔符“,”，例如，bitrate,framerate。缺省情况下表示
     *          bitrate,framerate。支持如下取值。 <li>all：所有信息；
     *          <li>onlineuser：在线人数；
     *          <li>bandwidth：带宽信息;
     *          <li>bitrate：码率信息；
     *          <li>framerate：帧率信息；
     * }
     */
    public function __construct($data = NULL) {
        \Volc\Service\Live\Models\GPBMetadata\RequestLive::initOnce();
        parent::__construct($data);
    }

    /**
     *当前页码，取值范围为 。
     *
     * Generated from protobuf field <code>int64 PageNum = 1;</code>
     * @return int|string
     */
    public function getPageNum()
    {
        return $this->PageNum;
    }

    /**
     *当前页码，取值范围为 。
     *
     * Generated from protobuf field <code>int64 PageNum = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setPageNum($var)
    {
        GPBUtil::checkInt64($var);
        $this->PageNum = $var;

        return $this;
    }

    /**
     *分页大小，取值范围为 。
     *
     * Generated from protobuf field <code>int64 PageSize = 2;</code>
     * @return int|string
     */
    public function getPageSize()
    {
        return $this->PageSize;
    }

    /**
     *分页大小，取值范围为 。
     *
     * Generated from protobuf field <code>int64 PageSize = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setPageSize($var)
    {
        GPBUtil::checkInt64($var);
        $this->PageSize = $var;

        return $this;
    }

    /**
     *域名空间名称。
     *参数 `Domain` 和 `Vhost`传且仅传一个。
     *
     * Generated from protobuf field <code>string Vhost = 3;</code>
     * @return string
     */
    public function getVhost()
    {
        return $this->Vhost;
    }

    /**
     *域名空间名称。
     *参数 `Domain` 和 `Vhost`传且仅传一个。
     *
     * Generated from protobuf field <code>string Vhost = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setVhost($var)
    {
        GPBUtil::checkString($var, True);
        $this->Vhost = $var;

        return $this;
    }

    /**
     *推流域名。
     *参数 `Domain` 和 `Vhost`传且仅传一个。
     *
     * Generated from protobuf field <code>string Domain = 4;</code>
     * @return string
     */
    public function getDomain()
    {
        return $this->Domain;
    }

    /**
     *推流域名。
     *参数 `Domain` 和 `Vhost`传且仅传一个。
     *
     * Generated from protobuf field <code>string Domain = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setDomain($var)
    {
        GPBUtil::checkString($var, True);
        $this->Domain = $var;

        return $this;
    }

    /**
     * 应用名称，默认查询所有应用名称，由 1 到 30
     * 位数字、字母、下划线及"-"和"."组成。
     *
     * Generated from protobuf field <code>string App = 5;</code>
     * @return string
     */
    public function getApp()
    {
        return $this->App;
    }

    /**
     * 应用名称，默认查询所有应用名称，由 1 到 30
     * 位数字、字母、下划线及"-"和"."组成。
     *
     * Generated from protobuf field <code>string App = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setApp($var)
    {
        GPBUtil::checkString($var, True);
        $this->App = $var;

        return $this;
    }

    /**
     * 流名称，缺省情况下，查询所有流名称，由 1 到 100
     * 位数字、字母、下划线及"-"和"."组成，如果指定 Stream，必须同时指定 App 的值
     *
     * Generated from protobuf field <code>string Stream = 6;</code>
     * @return string
     */
    public function getStream()
    {
        return $this->Stream;
    }

    /**
     * 流名称，缺省情况下，查询所有流名称，由 1 到 100
     * 位数字、字母、下划线及"-"和"."组成，如果指定 Stream，必须同时指定 App 的值
     *
     * Generated from protobuf field <code>string Stream = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setStream($var)
    {
        GPBUtil::checkString($var, True);
        $this->Stream = $var;

        return $this;
    }

    /**
     * 流类型，缺省情况下表示全选。支持如下取值。
     *<li>Origin：原始流；
     *<li>trans：转码流。
     *
     * Generated from protobuf field <code>string StreamType = 7;</code>
     * @return string
     */
    public function getStreamType()
    {
        return $this->StreamType;
    }

    /**
     * 流类型，缺省情况下表示全选。支持如下取值。
     *<li>Origin：原始流；
     *<li>trans：转码流。
     *
     * Generated from protobuf field <code>string StreamType = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setStreamType($var)
    {
        GPBUtil::checkString($var, True);
        $this->StreamType = $var;

        return $this;
    }

    /**
     * 想要查询的目标信息，使用英文逗号作为分隔符“,”，例如，bitrate,framerate。缺省情况下表示
     *bitrate,framerate。支持如下取值。 <li>all：所有信息；
     *<li>onlineuser：在线人数；
     *<li>bandwidth：带宽信息;
     *<li>bitrate：码率信息；
     *<li>framerate：帧率信息；
     *
     * Generated from protobuf field <code>string InfoType = 8;</code>
     * @return string
     */
    public function getInfoType()
    {
        return $this->InfoType;
    }

    /**
     * 想要查询的目标信息，使用英文逗号作为分隔符“,”，例如，bitrate,framerate。缺省情况下表示
     *bitrate,framerate。支持如下取值。 <li>all：所有信息；
     *<li>onlineuser：在线人数；
     *<li>bandwidth：带宽信息;
     *<li>bitrate：码率信息；
     *<li>framerate：帧率信息；
     *
     * Generated from protobuf field <code>string InfoType = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setInfoType($var)
    {
        GPBUtil::checkString($var, True);
        $this->InfoType = $var;

        return $this;
    }

}

