<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: live/request/request_live.proto

namespace Volc\Service\Live\Models\Request;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Volcengine.Live.Models.Request.ResumeStreamRequest</code>
 */
class ResumeStreamRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Vhost 的名称。
     * 参数 `Domain` 和 `Vhost`传且仅传一个。
     *
     * Generated from protobuf field <code>string Vhost = 1;</code>
     */
    protected $Vhost = '';
    /**
     *推流域名。
     *参数 `Domain` 和 `Vhost`传且仅传一个。
     *
     * Generated from protobuf field <code>string Domain = 2;</code>
     */
    protected $Domain = '';
    /**
     *应用名称，由 1 到 30 位数字、字母、下划线及"-"和"."组成
     *
     * Generated from protobuf field <code>string App = 3;</code>
     */
    protected $App = '';
    /**
     *流名称。由 1 到 100 位数字、字母、下划线及"-"和"."组成，如果指定
     * Stream，必须同时指定 App 的值
     *
     * Generated from protobuf field <code>string Stream = 4;</code>
     */
    protected $Stream = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $Vhost
     *           Vhost 的名称。
     *           参数 `Domain` 和 `Vhost`传且仅传一个。
     *     @type string $Domain
     *          推流域名。
     *          参数 `Domain` 和 `Vhost`传且仅传一个。
     *     @type string $App
     *          应用名称，由 1 到 30 位数字、字母、下划线及"-"和"."组成
     *     @type string $Stream
     *          流名称。由 1 到 100 位数字、字母、下划线及"-"和"."组成，如果指定
     *           Stream，必须同时指定 App 的值
     * }
     */
    public function __construct($data = NULL) {
        \Volc\Service\Live\Models\GPBMetadata\RequestLive::initOnce();
        parent::__construct($data);
    }

    /**
     * Vhost 的名称。
     * 参数 `Domain` 和 `Vhost`传且仅传一个。
     *
     * Generated from protobuf field <code>string Vhost = 1;</code>
     * @return string
     */
    public function getVhost()
    {
        return $this->Vhost;
    }

    /**
     * Vhost 的名称。
     * 参数 `Domain` 和 `Vhost`传且仅传一个。
     *
     * Generated from protobuf field <code>string Vhost = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setVhost($var)
    {
        GPBUtil::checkString($var, True);
        $this->Vhost = $var;

        return $this;
    }

    /**
     *推流域名。
     *参数 `Domain` 和 `Vhost`传且仅传一个。
     *
     * Generated from protobuf field <code>string Domain = 2;</code>
     * @return string
     */
    public function getDomain()
    {
        return $this->Domain;
    }

    /**
     *推流域名。
     *参数 `Domain` 和 `Vhost`传且仅传一个。
     *
     * Generated from protobuf field <code>string Domain = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setDomain($var)
    {
        GPBUtil::checkString($var, True);
        $this->Domain = $var;

        return $this;
    }

    /**
     *应用名称，由 1 到 30 位数字、字母、下划线及"-"和"."组成
     *
     * Generated from protobuf field <code>string App = 3;</code>
     * @return string
     */
    public function getApp()
    {
        return $this->App;
    }

    /**
     *应用名称，由 1 到 30 位数字、字母、下划线及"-"和"."组成
     *
     * Generated from protobuf field <code>string App = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setApp($var)
    {
        GPBUtil::checkString($var, True);
        $this->App = $var;

        return $this;
    }

    /**
     *流名称。由 1 到 100 位数字、字母、下划线及"-"和"."组成，如果指定
     * Stream，必须同时指定 App 的值
     *
     * Generated from protobuf field <code>string Stream = 4;</code>
     * @return string
     */
    public function getStream()
    {
        return $this->Stream;
    }

    /**
     *流名称。由 1 到 100 位数字、字母、下划线及"-"和"."组成，如果指定
     * Stream，必须同时指定 App 的值
     *
     * Generated from protobuf field <code>string Stream = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setStream($var)
    {
        GPBUtil::checkString($var, True);
        $this->Stream = $var;

        return $this;
    }

}

