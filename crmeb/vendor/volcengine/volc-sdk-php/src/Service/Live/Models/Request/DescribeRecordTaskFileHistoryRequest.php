<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: live/request/request_live.proto

namespace Volc\Service\Live\Models\Request;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Volcengine.Live.Models.Request.DescribeRecordTaskFileHistoryRequest</code>
 */
class DescribeRecordTaskFileHistoryRequest extends \Google\Protobuf\Internal\Message
{
    /**
     *域名空间名称。
     *参数 `Domain` 和 `Vhost`传且仅传一个。
     *
     * Generated from protobuf field <code>string Vhost = 1;</code>
     */
    public $Vhost = '';
    /**
     * 应用名称，默认查询所有应用名称，由 1 到 30
     * 位数字、字母、下划线及"-"和"."组成。
     *
     * Generated from protobuf field <code>string App = 2;</code>
     */
    public $App = '';
    /**
     * 流名称，缺省情况下，查询所有流名称，由 1 到 100
     * 位数字、字母、下划线及"-"和"."组成，如果指定 Stream，必须同时指定 App 的值
     *
     * Generated from protobuf field <code>string Stream = 3;</code>
     */
    public $Stream = '';
    /**
     *查询时间范围的开始时间
     *
     * Generated from protobuf field <code>string DateFrom = 4;</code>
     */
    public $DateFrom = '';
    /**
     *查询时间范围的结束时间
     *
     * Generated from protobuf field <code>string DateTo = 5;</code>
     */
    public $DateTo = '';
    /**
     *当前页码，取值范围为 。
     *
     * Generated from protobuf field <code>int64 PageNum = 6;</code>
     */
    public float $PageNum = 0;
    /**
     *分页大小，取值范围为 。
     *
     * Generated from protobuf field <code>int64 PageSize = 7;</code>
     */
    public float $PageSize = 0;
    /**
     * 录制文件保存位置。默认取值为 ToS。
     *<li>ToS
     *<li>ImageX
     *
     * Generated from protobuf field <code>string Type = 8;</code>
     */
    public $Type = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $Vhost
     *          域名空间名称。
     *          参数 `Domain` 和 `Vhost`传且仅传一个。
     *     @type string $App
     *           应用名称，默认查询所有应用名称，由 1 到 30
     *           位数字、字母、下划线及"-"和"."组成。
     *     @type string $Stream
     *           流名称，缺省情况下，查询所有流名称，由 1 到 100
     *           位数字、字母、下划线及"-"和"."组成，如果指定 Stream，必须同时指定 App 的值
     *     @type string $DateFrom
     *          查询时间范围的开始时间
     *     @type string $DateTo
     *          查询时间范围的结束时间
     *     @type int|float $PageNum
     *          当前页码，取值范围为 。
     *     @type int|float $PageSize
     *          分页大小，取值范围为 。
     *     @type string $Type
     *           录制文件保存位置。默认取值为 ToS。
     *          <li>ToS
     *          <li>ImageX
     * }
     */
    public function __construct($data = NULL) {
        \Volc\Service\Live\Models\GPBMetadata\RequestLive::initOnce();
        parent::__construct($data);
    }

    /**
     *域名空间名称。
     *参数 `Domain` 和 `Vhost`传且仅传一个。
     *
     * Generated from protobuf field <code>string Vhost = 1;</code>
     * @return string
     */
    public function getVhost()
    {
        return $this->Vhost;
    }

    /**
     *域名空间名称。
     *参数 `Domain` 和 `Vhost`传且仅传一个。
     *
     * Generated from protobuf field <code>string Vhost = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setVhost($var)
    {
        GPBUtil::checkString($var, True);
        $this->Vhost = $var;

        return $this;
    }

    /**
     * 应用名称，默认查询所有应用名称，由 1 到 30
     * 位数字、字母、下划线及"-"和"."组成。
     *
     * Generated from protobuf field <code>string App = 2;</code>
     * @return string
     */
    public function getApp()
    {
        return $this->App;
    }

    /**
     * 应用名称，默认查询所有应用名称，由 1 到 30
     * 位数字、字母、下划线及"-"和"."组成。
     *
     * Generated from protobuf field <code>string App = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setApp($var)
    {
        GPBUtil::checkString($var, True);
        $this->App = $var;

        return $this;
    }

    /**
     * 流名称，缺省情况下，查询所有流名称，由 1 到 100
     * 位数字、字母、下划线及"-"和"."组成，如果指定 Stream，必须同时指定 App 的值
     *
     * Generated from protobuf field <code>string Stream = 3;</code>
     * @return string
     */
    public function getStream()
    {
        return $this->Stream;
    }

    /**
     * 流名称，缺省情况下，查询所有流名称，由 1 到 100
     * 位数字、字母、下划线及"-"和"."组成，如果指定 Stream，必须同时指定 App 的值
     *
     * Generated from protobuf field <code>string Stream = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setStream($var)
    {
        GPBUtil::checkString($var, True);
        $this->Stream = $var;

        return $this;
    }

    /**
     *查询时间范围的开始时间
     *
     * Generated from protobuf field <code>string DateFrom = 4;</code>
     * @return string
     */
    public function getDateFrom()
    {
        return $this->DateFrom;
    }

    /**
     *查询时间范围的开始时间
     *
     * Generated from protobuf field <code>string DateFrom = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setDateFrom($var)
    {
        GPBUtil::checkString($var, True);
        $this->DateFrom = $var;

        return $this;
    }

    /**
     *查询时间范围的结束时间
     *
     * Generated from protobuf field <code>string DateTo = 5;</code>
     * @return string
     */
    public function getDateTo()
    {
        return $this->DateTo;
    }

    /**
     *查询时间范围的结束时间
     *
     * Generated from protobuf field <code>string DateTo = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setDateTo($var)
    {
        GPBUtil::checkString($var, True);
        $this->DateTo = $var;

        return $this;
    }

    /**
     *当前页码，取值范围为 。
     *
     * Generated from protobuf field <code>int64 PageNum = 6;</code>
     * @return int|string
     */
    public function getPageNum()
    {
        return $this->PageNum;
    }

    /**
     *当前页码，取值范围为 。
     *
     * Generated from protobuf field <code>int64 PageNum = 6;</code>
     * @param int $var
     * @return $this
     */
    public function setPageNum($var)
    {
        GPBUtil::checkFloat($var);
        $this->PageNum = $var;
        var_dump( "$this->PageNum");
        var_dump( $this->PageNum);

        return $this;
    }

    /**
     *分页大小，取值范围为 。
     *
     * Generated from protobuf field <code>int64 PageSize = 7;</code>
     * @return int|string
     */
    public function getPageSize()
    {
        return $this->float;
    }

    /**
     *分页大小，取值范围为 。
     *
     * Generated from protobuf field <code>int64 PageSize = 7;</code>
     * @param int $var
     * @return $this
     */
    public function setPageSize($var)
    {
        GPBUtil::checkFloat($var);
        $this->PageSize = $var;
        var_dump( "$this->PageSize");
        var_dump( $this->PageSize);

        return $this;
    }

    /**
     * 录制文件保存位置。默认取值为 ToS。
     *<li>ToS
     *<li>ImageX
     *
     * Generated from protobuf field <code>string Type = 8;</code>
     * @return string
     */
    public function getType()
    {
        return $this->Type;
    }

    /**
     * 录制文件保存位置。默认取值为 ToS。
     *<li>ToS
     *<li>ImageX
     *
     * Generated from protobuf field <code>string Type = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkString($var, True);
        $this->Type = $var;

        return $this;
    }

}

